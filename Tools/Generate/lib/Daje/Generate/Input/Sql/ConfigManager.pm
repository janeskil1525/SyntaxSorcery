use v5.40;
use feature 'class';
no warnings 'experimental::class';


class Daje::Generate::Input::Sql::ConfigManager {
    use Mojo::File;
    use Mojo::JSON qw{from_json},

    field $source_path :param :reader = "";
    field $files :reader = {};
    field $filetype :param :reader = "";
    field @changed_files :reader;
    field $changed;

    method save_new_hash($file) {
        my $path = Mojo::File->new($file);

    }

    method load_json($file) {

        my $context = try {
            return Mojo::File->new($file)->slurp;
        } catch ($e) {
            die "load_json failed '$e";
        };

        return from_json($context);
    }

    method load_changed_files () {

        try {
            my $path = Mojo::File->new($source_path);
            $files = $path->list();
        } catch ($e) {
            die "Files could not be loaded: $e";
        };
        my $changed = Daje::Generate::Tools::FileChanged->new();
        my $length = scalar @{$files};
        for (my $i = 0; $i < $length; $i++) {
            if ($changed->is_file_changed( @{$files}[$i])) {
                push @changed_files, @{$files}[$i]->dirname . '/' . @{$files}[$i]->basename;
            }
        }

        return;
    }


};


1;

#################### pod generated by Pod::Autopod - keep this line to make pod updates possible ####################

=head1 NAME

lib::Daje::Generate::Input::Sql::ConfigManager - lib::Daje::Generate::Input::Sql::ConfigManager


=head1 DESCRIPTION

pod generated by Pod::Autopod - keep this line to make pod updates possible ####################


=head1 REQUIRES

L<Mojo::File> 

L<feature> 

L<v5.40> 


=head1 METHODS


=cut

